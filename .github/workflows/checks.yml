name: CR

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  cr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [
          "3.10",
          "3.11",
          "3.12",
          "3.13",
        ]
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ matrix.python-version }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-
    - name: Cache poetry dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    # Install dependencies if cache does not exist
    - name: Install local dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction
    - name: Run checks
      run: |
        poetry run pre-commit run --hook-stage push --all-files
